name: basebuild

on:
  pull_request:
  push:
  # workflow_dispatch:
  #   inputs:
  #     runs_on:
  #       description: "Runs on value"
  #       required: true
  #       default: "warp-ubuntu-latest-x64-8x"

jobs:
  goreleaser:
    # runs-on: ${{ inputs.runs_on }}
    runs-on: warpdev-custom-validteststack-staticip-ondemand
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log GitHub context
        uses: actions/github-script@v7
        with:
          script: |
            console.log('GitHub context:', context);
            core.debug('Full GitHub context object:');
            core.debug(JSON.stringify(context, null, 2));

      - name: Set up Node.js
        uses: WarpBuilds/setup-node@v4
        with:
          node-version: 20.11.0

      - name: Ensure GCC is installed
        run: |
          if ! command -v gcc &> /dev/null
          then
            echo "GCC could not be found, installing..."
            sudo apt-get update
            sudo apt-get install -y gcc
          else
            echo "GCC is already installed"
          fi

      - name: Set up Go
        uses: WarpBuilds/setup-go@v5
        with:
          go-version: '>=1.22.5'

      # This step usually is not needed because the /ui/dist is pregenerated locally
      # but its here to ensure that each release embeds the latest admin ui artifacts.
      # If the artificats differs, a "dirty error" is thrown - https://goreleaser.com/errors/dirty/
      - name: Build Admin dashboard UI
        run: npm --prefix=./ui ci && npm --prefix=./ui run build

      # Temporary disable as the types can have random generated identifiers making it non-deterministic.
      #
      # # Similar to the above, the jsvm types are pregenerated locally
      # # but its here to ensure that it wasn't forgotten to be executed.
      # - name: Generate jsvm types
      #   run: go run ./plugins/jsvm/internal/types/types.go

      # The prebuilt golangci-lint doesn't support go 1.18+ yet
      # https://github.com/golangci/golangci-lint/issues/2649
      # - name: Run linter
      #   uses: golangci/golangci-lint-action@v3

      - name: Run tests
        run: go test ./...

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create snapshot
        if: github.event_name == 'push'
        uses: WarpBuilds/snapshot-save@feat/snp-rnr-action
        with:
          warpbuild-base-url: "https://api.dev.warpbuild.dev/api/v1"
          wait-timeout-minutes: 30
          alias: "wb-pocketbase-snp-2"
